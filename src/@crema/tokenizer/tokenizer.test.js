// Generated by CodiumAI

import Tokenizer, { Token } from './tokenizer';

describe('tokenize', () => {
  /**
   * Kiểm tra các hợp lệ
   */
  it('Kiểm tra empty', () => {
    const tokenizer = new Tokenizer('   ');
    const result = tokenizer.tokenize();
    expect(result).toEqual([]);
  });

  it('Kiểm tra string', () => {
    const tokenizer = new Tokenizer("'Hello, World!'");
    const tokens = tokenizer.tokenize();
    expect(tokens).toEqual([new Token('STRING', 'Hello, World!')]);
  });

  it('Kiểm tra số', () => {
    const tokenizer = new Tokenizer('123');
    const tokens = tokenizer.tokenize();
    expect(tokens).toEqual([new Token('NUMBER', '123')]);
  });

  it('Kiểm tra logic', () => {
    const tokenizer = new Tokenizer('point > 5 and point < 8', ['point']);
    const tokens = tokenizer.tokenize();
    expect(tokens).toEqual([
      new Token('IDENTIFIER', 'point'),
      new Token('LOGIC', '>'),
      new Token('NUMBER', '5'),
      new Token('LOGIC', 'and'),
      new Token('IDENTIFIER', 'point'),
      new Token('LOGIC', '<'),
      new Token('NUMBER', '8'),
    ]);
  });

  it('Kiểm tra operator', () => {
    const tokenizer = new Tokenizer('(point + 5 - 3) * -2 / 3', ['point']);
    const tokens = tokenizer.tokenize();
    expect(tokens).toEqual([
      new Token('PUNCTUATION', '('),
      new Token('IDENTIFIER', 'point'),
      new Token('OPERATOR', '+'),
      new Token('NUMBER', '5'),
      new Token('OPERATOR', '-'),
      new Token('NUMBER', '3'),
      new Token('PUNCTUATION', ')'),
      new Token('OPERATOR', '*'),
      new Token('NUMBER', '-2'),
      new Token('OPERATOR', '/'),
      new Token('NUMBER', '3'),
    ]);
  });

  it('Kiểm tra hàm hỗ trợ', () => {
    const tokenizer = new Tokenizer('point.dt.year()', ['point']);
    const tokens = tokenizer.tokenize();
    expect(tokens).toEqual([
      new Token('METHOD_CALL', { methodName: 'dt.year', variable: 'point' }),
    ]);
  });

  it('Kiểm tra hàm có sẵn', () => {
    const tokenizer = new Tokenizer('sqrt()');
    const tokens = tokenizer.tokenize();
    expect(tokens).toEqual([
      new Token('FUNCTION_CALL', 'sqrt'),
      new Token('PUNCTUATION', '('),
      new Token('PUNCTUATION', ')'),
    ]);
  });

  /**
   * Kiểm tra không hợp lệ
   */
  it('Kiểm tra string không hợp lệ', () => {
    try {
      const tokenizer = new Tokenizer("'Hello, World!''");
      const tokens = tokenizer.tokenize();
      expect(tokens).toBeNull();
    } catch (e) {
      console.log(e.message);
      // expect(e.message).toEqual('Unterminated string literal');
    }
  });
});
